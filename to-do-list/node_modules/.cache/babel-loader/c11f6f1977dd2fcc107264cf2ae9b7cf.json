{"ast":null,"code":"var _jsxFileName = \"/home/isabela/Esparta/to-do-list/src/components/to-do-list/index.js\";\nimport React from 'react';\nimport Task from '../task';\nimport { Modal } from 'antd';\n\nclass ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: {\n        text: '',\n        status: 'pending'\n      },\n      id: 0,\n      list: [],\n      visible: false\n    };\n\n    this.addTask = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        task: {\n          text: value,\n          status: 'pending'\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let {\n        task,\n        id\n      } = this.state;\n      task.id = id;\n      let nextId = id + 1;\n      let list = [...this.state.list];\n\n      if (task.text.trim() === \"\" || task.text.length < 3) {\n        return alert(\"Preencha o campo!\");\n      }\n\n      list.push(task);\n      this.setState({\n        task: {\n          text: '',\n          status: 'pending'\n        },\n        id: nextId,\n        list: list\n      });\n    };\n\n    this.changeStatus = id => {\n      const list = [...this.state.list];\n\n      if (list[id].status === 'pending') {\n        list[id].status = 'done';\n      } else {\n        list[id].status = 'pending';\n      }\n\n      this.setState({\n        list: list\n      });\n    };\n\n    this.deleteConfimation = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.cancelDelete = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.removeTask = id => {\n      const list = [...this.state.list];\n      list.splice(id, 1);\n      this.setState({\n        list: list,\n        visible: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      task,\n      id,\n      visible,\n      list\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      visible: visible,\n      onOk: () => this.removeTask(id),\n      onCancel: this.cancelDelete,\n      okText: \"Confirma\",\n      cancelText: \"Cancela\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Tem certeza que deseja deletar esta tarefa?\"))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: task.text,\n      onChange: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Adicionar Tarefa\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Lista Pend\\xEAncias\"), list.filter(task => task.status === 'pending').map((task, key) => /*#__PURE__*/React.createElement(Task, {\n      task: task.text,\n      key: key,\n      id: task.id,\n      removeTask: this.removeTask,\n      status: task.status,\n      changeStatus: this.changeStatus,\n      deleteConfimation: this.deleteConfimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Lista Feitas\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, list.filter(task => task.status === 'done').map((task, key) => /*#__PURE__*/React.createElement(Task, {\n      task: task.text,\n      key: key,\n      id: task.id,\n      removeTask: this.removeTask,\n      status: task.status,\n      changeStatus: this.changeStatus,\n      deleteConfimation: this.deleteConfimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/home/isabela/Esparta/to-do-list/src/components/to-do-list/index.js"],"names":["React","Task","Modal","ToDoList","Component","state","task","text","status","id","list","visible","addTask","target","value","setState","handleSubmit","e","preventDefault","nextId","trim","length","alert","push","changeStatus","deleteConfimation","cancelDelete","removeTask","splice","render","filter","map","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Task from '../task'\nimport { Modal } from 'antd';\n\n\nclass ToDoList extends React.Component {\n  state = {\n    task: {\n      text: '',\n      status: 'pending'\n    },\n    id: 0,\n    list: [],\n    visible: false\n  }\n\n  addTask = ({ target: { value } }) => {\n    this.setState({ task: { text: value, status: 'pending' } })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    let { task, id } = this.state;\n    task.id = id;\n    let nextId = id + 1;\n\n    let list = [...this.state.list];\n\n    if (task.text.trim() === \"\" || task.text.length < 3) {\n      return alert(\"Preencha o campo!\")\n    }\n\n    list.push(task);\n\n    this.setState({\n      task: {\n        text: '',\n        status: 'pending'\n      },\n      id: nextId,\n      list: list\n    });\n  }\n\n\n  changeStatus = (id) => {\n    const list = [...this.state.list]\n\n    if (list[id].status === 'pending') {\n      list[id].status = 'done'\n    } else {\n      list[id].status = 'pending'\n    }\n    this.setState({ list: list });\n  }\n\n  deleteConfimation = () => {\n    this.setState({ visible: true });\n  }\n\n  cancelDelete = () => {\n    this.setState({ visible: false });\n  };\n\n  removeTask = (id) => {\n    const list = [...this.state.list]\n    list.splice(id, 1);\n\n    this.setState({ list: list, visible: false });\n  }\n\n\n\n  render() {\n\n    const { task, id, visible, list } = this.state;\n\n    return (\n      <>\n        <div>\n          <Modal\n            visible={visible}\n            onOk={() => this.removeTask(id)}\n            onCancel={this.cancelDelete}\n            okText=\"Confirma\"\n            cancelText=\"Cancela\"\n          >\n            <p>Tem certeza que deseja deletar esta tarefa?</p>\n          </Modal>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <input value={task.text} onChange={this.addTask}></input>\n          <button>Adicionar Tarefa</button>\n        </form>\n\n        <div>\n          <h3>Lista Pendências</h3>\n          {list.filter(task => task.status === 'pending')\n            .map((task, key) => (\n              <Task\n                task={task.text}\n                key={key}\n                id={task.id}\n                removeTask={this.removeTask}\n                status={task.status}\n                changeStatus={this.changeStatus}\n                deleteConfimation={this.deleteConfimation}\n              />\n            ))}\n        </div>\n        <hr />\n        <h3>Lista Feitas</h3>\n        <div>\n          {list.filter(task => task.status === 'done')\n            .map((task, key) => (\n              <Task\n                task={task.text}\n                key={key}\n                id={task.id}\n                removeTask={this.removeTask}\n                status={task.status}\n                changeStatus={this.changeStatus}\n                deleteConfimation={this.deleteConfimation}\n              />\n            ))}\n        </div>\n      </>\n\n    )\n  }\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}