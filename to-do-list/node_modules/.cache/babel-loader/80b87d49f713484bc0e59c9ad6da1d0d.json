{"ast":null,"code":"var _jsxFileName = \"/home/isabela/Esparta/to-do-list/src/components/to-do-list/index.js\";\nimport React from 'react';\nimport Task from '../task';\nimport { Modal, Row, Col } from 'antd';\nimport styled from \"styled-components\";\n\nclass ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: {\n        text: '',\n        status: 'pending'\n      },\n      id: 0,\n      list: [],\n      visible: false\n    };\n\n    this.addTask = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        task: {\n          text: value,\n          status: 'pending'\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let {\n        task,\n        id\n      } = this.state;\n      task.id = id;\n      let nextId = id + 1;\n      let list = [...this.state.list];\n\n      if (task.text.trim() === \"\" || task.text.length < 3) {\n        return alert(\"Preencha o campo!\");\n      }\n\n      list.push(task);\n      this.setState({\n        task: {\n          text: '',\n          status: 'pending'\n        },\n        id: nextId,\n        list: list\n      });\n    };\n\n    this.getTaskFromList = (tasks, id) => {\n      let res = tasks.filter(elem => elem.id === id);\n      return res[0];\n    };\n\n    this.changeStatus = id => {\n      let list = [...this.state.list];\n      let task = this.getTaskFromList(list, id);\n\n      if (task.status === 'pending') {\n        task.status = 'done';\n      } else {\n        task.status = 'pending';\n      }\n\n      this.setState({\n        list: list\n      });\n    };\n\n    this.deleteConfimation = id => {\n      this.setState({\n        visible: true,\n        deleteId: id\n      });\n    };\n\n    this.cancelDelete = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.removeTask = () => {\n      const {\n        deleteId\n      } = this.state;\n      let list = [...this.state.list];\n      list = list.filter(elem => elem.id !== deleteId);\n      this.setState({\n        list: list,\n        visible: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      task,\n      visible,\n      list\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      visible: visible,\n      onOk: this.removeTask,\n      onCancel: this.cancelDelete,\n      okText: \"Confirma\",\n      cancelText: \"Cancela\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Tem certeza que deseja deletar esta tarefa?\"))), /*#__PURE__*/React.createElement(MainContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: task.text,\n      onChange: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"Adicionar Tarefa\"), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Tarefas Pendentes\"), list.filter(task => task.status === 'pending').map((task, key) => /*#__PURE__*/React.createElement(Task, {\n      task: task.text,\n      key: key,\n      id: task.id,\n      removeTask: this.removeTask,\n      status: task.status,\n      changeStatus: this.changeStatus,\n      deleteConfimation: this.deleteConfimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Tarefas Conclu\\xEDdas\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, list.filter(task => task.status === 'done').map((task, key) => /*#__PURE__*/React.createElement(Task, {\n      task: task.text,\n      key: key,\n      id: task.id,\n      removeTask: this.removeTask,\n      status: task.status,\n      changeStatus: this.changeStatus,\n      deleteConfimation: this.deleteConfimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nconst MainContainer = styled.div`\n\n\n`;\nexport default ToDoList;","map":{"version":3,"sources":["/home/isabela/Esparta/to-do-list/src/components/to-do-list/index.js"],"names":["React","Task","Modal","Row","Col","styled","ToDoList","Component","state","task","text","status","id","list","visible","addTask","target","value","setState","handleSubmit","e","preventDefault","nextId","trim","length","alert","push","getTaskFromList","tasks","res","filter","elem","changeStatus","deleteConfimation","deleteId","cancelDelete","removeTask","render","map","key","MainContainer","div"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Task from '../task'\nimport { Modal, Row, Col } from 'antd';\nimport styled from \"styled-components\";\n\n\nclass ToDoList extends React.Component {\n  state = {\n    task: {\n      text: '',\n      status: 'pending'\n    },\n    id: 0,\n    list: [],\n    visible: false\n  }\n\n  addTask = ({ target: { value } }) => {\n    this.setState({ task: { text: value, status: 'pending' } });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    let { task, id } = this.state;\n    task.id = id;\n    let nextId = id + 1;\n\n    let list = [...this.state.list];\n\n    if (task.text.trim() === \"\" || task.text.length < 3) {\n      return alert(\"Preencha o campo!\")\n    }\n\n    list.push(task);\n\n    this.setState({\n      task: {\n        text: '',\n        status: 'pending'\n      },\n      id: nextId,\n      list: list\n    });\n  }\n\n  getTaskFromList = (tasks, id) => {\n    let res = tasks.filter(elem => elem.id === id)\n    return res[0]\n  }\n\n  changeStatus = (id) => {\n    let list = [...this.state.list];\n\n    let task = this.getTaskFromList(list, id);\n\n    if (task.status === 'pending') {\n      task.status = 'done'\n    } else {\n      task.status = 'pending'\n    }\n\n    this.setState({ list: list });\n  }\n\n  deleteConfimation = (id) => {\n    this.setState({ visible: true, deleteId: id });\n  }\n\n  cancelDelete = () => {\n    this.setState({ visible: false });\n  };\n\n  removeTask = () => {\n    const { deleteId } = this.state;\n\n    let list = [...this.state.list];\n\n    list = list.filter(elem => elem.id !== deleteId);\n\n    this.setState({ list: list, visible: false });\n  }\n\n\n  render() {\n\n    const { task, visible, list } = this.state;\n\n    return (\n      <>\n        <div>\n          <Modal\n            visible={visible}\n            onOk={this.removeTask}\n            onCancel={this.cancelDelete}\n            okText=\"Confirma\"\n            cancelText=\"Cancela\"\n          >\n            <p>Tem certeza que deseja deletar esta tarefa?</p>\n          </Modal>\n        </div>\n\n        <MainContainer>\n          <Row>\n            <Col span={24}>\n              <div>\n                <form onSubmit={this.handleSubmit}>\n                  <input value={task.text} onChange={this.addTask}></input>\n                  <button>Adicionar Tarefa</button>\n                  <Tooltip title=\"search\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\n                  </Tooltip>\n                </form>\n              </div>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={12}>\n              <div>\n                <h3>Tarefas Pendentes</h3>\n                {list.filter(task => task.status === 'pending')\n                  .map((task, key) => (\n                    <Task\n                      task={task.text}\n                      key={key}\n                      id={task.id}\n                      removeTask={this.removeTask}\n                      status={task.status}\n                      changeStatus={this.changeStatus}\n                      deleteConfimation={this.deleteConfimation}\n                    />\n                  ))}\n              </div>\n            </Col>\n\n            <Col span={12}>\n              <h3>Tarefas Concluídas</h3>\n              <div>\n                {list.filter(task => task.status === 'done')\n                  .map((task, key) => (\n                    <Task\n                      task={task.text}\n                      key={key}\n                      id={task.id}\n                      removeTask={this.removeTask}\n                      status={task.status}\n                      changeStatus={this.changeStatus}\n                      deleteConfimation={this.deleteConfimation}\n                    />\n                  ))}\n              </div>\n            </Col>\n          </Row>\n        </MainContainer>\n\n      </>\n\n    )\n  }\n}\n\nconst MainContainer = styled.div`\n\n\n`\n\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}