{"ast":null,"code":"var _jsxFileName = \"/home/isabela/Esparta/to-do-list/src/components/to-do-list/index.js\";\nimport React from 'react';\nimport Task from '../task';\n\nclass ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: {\n        text: '',\n        status: 'to-do'\n      },\n      id: 0,\n      list: []\n    };\n\n    this.setTask = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        task: {\n          text: value,\n          status: 'to-do'\n        }\n      });\n    };\n\n    this.removeTask = key => {\n      const list = [...this.state.list];\n      list.splice(key, 1);\n      this.setState({\n        list: list\n      }); //this.props.cancelDelete()\n    };\n\n    this.changeStatus = id => {\n      const list = [...this.state.list];\n\n      if (list[id].status === 'to-do') {\n        list[id].status = 'done';\n      } else {\n        list[id].status = 'to-do';\n      }\n\n      this.setState({\n        list: list\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let {\n        task,\n        id\n      } = this.state;\n      task.id = id;\n      let nextId = id + 1;\n      let list = [...this.state.list];\n\n      if (task.text.trim() === \"\" || task.text.length < 3) {\n        return alert(\"Preencha o campo!\");\n      }\n\n      list.push(task);\n      this.setState({\n        task: {\n          text: '',\n          status: \"to-do\"\n        },\n        id: nextId,\n        list: list\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    const {\n      list,\n      task\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: task.text,\n      onChange: this.setTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Adicionar Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, list.filter(task => task.status === 'to-do').map((task, key) => /*#__PURE__*/React.createElement(Task, {\n      task: task.text,\n      key: key,\n      id: task.id,\n      removeTask: this.removeTask,\n      status: task.status,\n      changeStatus: this.changeStatus //cancelDelete={this.cancelDelete.bind(this)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, list.filter(task => task.status === 'done').map((task, key) => /*#__PURE__*/React.createElement(Task, {\n      task: task.text,\n      key: key,\n      id: task.id,\n      removeTask: this.removeTask,\n      status: task.status,\n      changeStatus: this.changeStatus //cancelDelete={this.cancelDelete.bind(this)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/home/isabela/Esparta/to-do-list/src/components/to-do-list/index.js"],"names":["React","Task","ToDoList","Component","state","task","text","status","id","list","setTask","target","value","setState","removeTask","key","splice","changeStatus","handleSubmit","e","preventDefault","nextId","trim","length","alert","push","render","console","log","filter","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Task from '../task'\n\n\nclass ToDoList extends React.Component {\n  state = {\n    task: {\n      text: '',\n      status: 'to-do'\n    },\n    id: 0,\n    list: [],\n  }\n\n  setTask = ({ target: { value } }) => {\n    this.setState({ task: { text: value, status: 'to-do' } })\n\n  }\n\n  removeTask = (key) => {\n    const list = [...this.state.list]\n    list.splice(key, 1);\n\n    this.setState({ list: list });\n    //this.props.cancelDelete()\n  }\n\n  changeStatus = (id) => {\n    const list = [...this.state.list]\n\n    if (list[id].status === 'to-do') {\n      list[id].status = 'done'\n    } else {\n      list[id].status = 'to-do'\n    }\n    this.setState({ list: list });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    let { task, id } = this.state;\n    task.id = id;\n    let nextId = id + 1;\n\n\n    let list = [...this.state.list];\n\n\n    if (task.text.trim() === \"\" || task.text.length < 3) {\n      return alert(\"Preencha o campo!\")\n    }\n\n    list.push(task);\n\n    this.setState({\n      task: {\n        text: '',\n        status: \"to-do\"\n      },\n      id: nextId,\n      list: list\n    });\n  }\n\n\n  render() {\n    console.log(this.state)\n\n    const { list, task } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <input value={task.text} onChange={this.setTask}></input>\n          <button>Adicionar Task</button>\n        </form>\n\n        <div>\n          {list.filter(task => task.status === 'to-do')\n            .map((task, key) => (\n              <Task\n                task={task.text}\n                key={key}\n                id={task.id}\n                removeTask={this.removeTask}\n                status={task.status}\n                changeStatus={this.changeStatus}\n              //cancelDelete={this.cancelDelete.bind(this)}\n              />\n            ))}\n        </div>\n        <br />\n        <div>\n          {list.filter(task => task.status === 'done')\n            .map((task, key) => (\n              <Task\n                task={task.text}\n                key={key}\n                id={task.id}\n                removeTask={this.removeTask}\n                status={task.status}\n                changeStatus={this.changeStatus}\n              //cancelDelete={this.cancelDelete.bind(this)}\n              />\n            ))}\n        </div>\n      </>\n\n    )\n  }\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}